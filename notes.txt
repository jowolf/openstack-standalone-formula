4/12/15
d NAT working, albeit with floating IP

Todo:
d Vervet instance
Vervet desktop
n --swap=12G
n zcache
t zram

Stymied: blank yellow screen on lubuntu spice - same w/spicec client, libvirt VMM not working (older Maya).


auto-save snapshot/image in nova script

dl win2012 instance
ubuntu L&F -> eRacks OpenStack Dashboard
scripts / scaffolding for easier launches
volumes? ceph?

boot from cdrom
 - test with LXLE
p memory compression
docker integration
ostack addon from latest admin
tor hveem's salt-virt

python jenkins equiv

OSBD salt - 2x firewall?

2nd dns server setup

eRacks list
NAS72
fixtures

Interesting:

joe@trust2:~$ lynx 169.254.169.254/latest
Looking up  '169.254.169.254' first
joe@trust2:~$ lynx 169.254.169.254/latest/meta-data
Looking up  '169.254.169.254' first
joe@trust2:~$ lynx 169.254.169.254/latest/meta-data/block-device-mapping
Looking up  '169.254.169.254' first


4/5/15

1) fixed typo (215 was supposed to be 216)
2) libvirt & kvm/qemu source is helpful
3) put together global OSS Browser with indexing / 'ctabs' to brtowse source call tree :)
4) spice problem was from typo - re-test
5) leftover state wasn't getting deleted from libvirt & nova dirs - deleted in ostack-clean now
6) last stmt in ostack-clean returns rslt - add 'echo done' :)
7) Noop firewall is nova.virt.firewall.NoopFirewallDriver, but IptablesFirewallDriver is in
    nova.virt.libvirt.firewall.IptablesFirewallDriver - the one in nova.virt.firewall is just a
    parent class, which returns False to 'is valid filter' call. Grr.
    Plus, this missing filter shows up in nova-conductor and libvirt logs as
    "Could not find filter: instance-instance-0000001", saying NOTHING about the missing firewall driver.
    Grrrr.

4/4/15

/etc/libvirt/libvirtd.conf:
  ini.options_present:
    DEFAULT_IMPLICIT:
      listen_addr: 127.0.0.1
      log_level: 1
      log_buffer_size: 0

- utility to tell what .deb pkg contains which files
    https://www.debian.org/doc/manuals/debian-faq/ch-pkgtools.en.html 8.5:
    dpkg --search filename
    dlocate -S  filename
    apt-file search foo

3/31/15
OK eveything's converted to salt and working, but nova won't work with conf.d approach,
due to dhcpbridge, fired off by dnsmasq.

Grr.


3/30
Cinder: Configuring admin URI using auth fragments. This is deprecated, use 'identity_uri' instead.

d (related to incomplete nova service list) "No availability zones found"


3/29
d update/saltify keystone, nova like cinder fm 3/19

3/21

tweaks to cinder, delete lvol1 to make room in pv for cinder to create vols

TODO: deal with lvm.conf filter - no augeas lens, arcane .conf format -

see point 8:

http://docs.openstack.org/juno/install-guide/install/apt/content/cinder-install-storage-node.html

filter = [ "a/sda/", "a/sdb/", "r/.*/"]

TODO: add pillar for vg


3/19/15
Cinder now working using all new-style salt states -

- no more create-db script
- proper sync db, with unless
- ini-manage to create conf
- conf.d, does NOT modify original pkg's conf files
- creates proper symlink & dir
- proper dependencies set up for create order
- modifies /etc/init/cinder-*.conf for config dir
- proper inculdes added to make these sls modules more independent and runnable on their own (see below)
- pillar updated for proper keystone auths
- uses salt keystone.xxx mechanisms

Works with:

salt-call -l debug --local --file-root=/home/joe/openstack-standalone-formula state.sls openstack.cinder

pillar.data and pillar.item keystone also insightful.

Still need to do whole test when all modules ported.


JJW 3/7/15

Todo:  retrive soliloquy from issues and update Readme.rst

In addition:

- late Nov 2014: played with docker deployment of OpenStack, with more minimal
Salt postprocessing, including conf dirs

- Feb 2015: Experimenting with adopting modular Docker approach with fig (now
docker-compose) - also converting original saltstack-installed OS14 dir
structure to conf dirs

- Mar 2015: found original conf file mods by saltstack left sqlite db for
keystone (!) - after extensive debugging and testing of new conf dir strategy,
which leaves the orig conf file untouched (and therefore easily upgradeable),
finally found:

   sudo keystone-manage --config-dir /etc/keystone/keystone.conf.d db_sync

Needed to pass the conf-dir to dbsync. Sigh.


I found this, first, by inserting the following into keystone.cli:

- - -

class DbSync(BaseApp):
    """Sync the database."""

    name = 'db_sync'

    @classmethod
    def add_argument_parser(cls, subparsers):
        parser = super(DbSync, cls).add_argument_parser(subparsers)
        parser.add_argument('version', default=None, nargs='?',
                            help=('Migrate the database up to a specified '
                                  'version. If not provided, db_sync will '
                                  'migrate the database to the latest known '
                                  'version.'))
        parser.add_argument('--extension', default=None,
                            help=('Migrate the database for the specified '
                                  'extension. If not provided, db_sync will '
                                  'migrate the common repository.'))

        return parser

    @staticmethod
    def main():
        # JJW
        from pprint import pprint
        pprint (CONF.__dict__)
        pprint (CONF._groups)
        pprint (CONF.command.__dict__)

        version = CONF.command.version
        extension = CONF.command.extension
        migration_helpers.sync_database_to_version(extension, version)

- - -

Then, by firing up ipython in interactive mode, in looking at cli.CONF:

ipython -i /usr/bin/keystone-manage db_sync

A couple of useful ones:

In [7]: cli.CONF._groups['database'].__dict__

In [15]: cli.CONF._opts['config_dir']['opt'].__dict__
